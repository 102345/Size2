@model Size.ContaDigital.Presentation.ViewModels.ContaViewModel
@{
    ViewData["Title"] = "Deposito Conta Digital";
}
<h2>Deposito Conta Digital</h2>

<div class="container">

    <div class="row">
        <div class="col-xs-2">
            @ViewData["MsgOperacao"]
        </div>

    </div>
    <div class="row">
        <!---<div class="col-xs-12"> -->
        <div class="col-xs-2">
            Nome&nbsp;&nbsp;
        </div>
        <div class="col-xs-2">
            @ViewData["Titular"]&nbsp;&nbsp;
        </div>
        <div class="col-xs-2">
            Agência&nbsp;&nbsp;
        </div>
        <div class="col-xs-2">
            @ViewData["Agencia"]&nbsp;&nbsp;
        </div>
        <div class="col-xs-2">
            Conta Corrente&nbsp;&nbsp;
        </div>
        <div class="col-xs-2">
            @ViewData["ContaCorrente"]
        </div>
        <!--</div>-->
    </div>

    <div class="row">
        <div class="col-md-4">
            <form asp-action="EfetivarDeposito" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Valor" class="control-label"></label>
                    <input asp-for="Valor" class="form-control" />
                    <span asp-validation-for="Valor" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="OK" class="btn btn-primary" />
                    <a href="/ContaDigital/Index" class="btn btn-primary"><i class="icon-user icon-white"></i>Retornar</a>
                </div>
            </form>
        </div>
    </div>


    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    }


</div>

